# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'uis/GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1706, 1027)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("font-size: 12pt; font: Arial;")
        MainWindow.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(10, 850, 941, 131))
        self.plainTextEdit.setMouseTracking(True)
        self.plainTextEdit.setStyleSheet("font-size: 12pt; font: Arial;")
        self.plainTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.plainTextEdit.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setCenterOnScroll(False)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.VideoFeedLabel = QtWidgets.QLabel(self.centralwidget)
        self.VideoFeedLabel.setGeometry(QtCore.QRect(10, 5, 941, 791))
        self.VideoFeedLabel.setMouseTracking(True)
        self.VideoFeedLabel.setStyleSheet("background-color: rgb(0,0,0); border:2px solid rgb(255, 0, 0); ")
        self.VideoFeedLabel.setText("")
        self.VideoFeedLabel.setObjectName("VideoFeedLabel")
        self.frameslider = QtWidgets.QProgressBar(self.centralwidget)
        self.frameslider.setGeometry(QtCore.QRect(10, 812, 941, 31))
        self.frameslider.setStyleSheet("    QProgressBar {\n"
"        border: 2px solid rgba(33, 37, 43, 180);\n"
"        border-radius: 5px;\n"
"        text-align: center;\n"
"        background-color: rgba(33, 37, 43, 180);\n"
"        color: black;\n"
"    }\n"
"    QProgressBar::chunk {\n"
"        background-color: #FFD700;\n"
"    }")
        self.frameslider.setMinimum(0)
        self.frameslider.setMaximum(100)
        self.frameslider.setProperty("value", 0)
        self.frameslider.setObjectName("frameslider")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockWidget = QtWidgets.QDockWidget(MainWindow)
        self.dockWidget.setMinimumSize(QtCore.QSize(329, 987))
        self.dockWidget.setStyleSheet("font-size: 10pt;")
        self.dockWidget.setFloating(False)
        self.dockWidget.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.frame_3 = QtWidgets.QFrame(self.dockWidgetContents)
        self.frame_3.setGeometry(QtCore.QRect(10, 0, 311, 301))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.frame_3.setFont(font)
        self.frame_3.setCursor(QtGui.QCursor(QtCore.Qt.UpArrowCursor))
        self.frame_3.setStyleSheet(" color: rgb(0, 0, 0);\n"
" background-color: rgb(255, 255, 255);\n"
"font-size: 10pt;\n"
"")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.choosevideobutton = QtWidgets.QPushButton(self.frame_3)
        self.choosevideobutton.setGeometry(QtCore.QRect(30, 50, 101, 31))
        self.choosevideobutton.setStyleSheet("     QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"            \n"
"            \n"
"            }")
        self.choosevideobutton.setObjectName("choosevideobutton")
        self.pausebutton = QtWidgets.QPushButton(self.frame_3)
        self.pausebutton.setGeometry(QtCore.QRect(180, 50, 111, 21))
        self.pausebutton.setMaximumSize(QtCore.QSize(300, 30))
        self.pausebutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(150, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(150, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 150);\n"
"                border-style: inset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 255);\n"
"                font: bold 12px;\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(255, 0, 0);\n"
"                padding-left: 2px;\n"
"                padding-top: 2px;\n"
"            }")
        self.pausebutton.setCheckable(True)
        self.pausebutton.setObjectName("pausebutton")
        self.savedatabutton = QtWidgets.QPushButton(self.frame_3)
        self.savedatabutton.setGeometry(QtCore.QRect(10, 110, 131, 31))
        self.savedatabutton.setStyleSheet("QPushButton {\n"
"                color: rgb(0, 0, 0);\n"
"                background-color: rgb(255, 255, 0);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 255, 100);\n"
"                min-width: 1em;\n"
"                padding: 6px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(255, 255, 200);\n"
"                color: rgb(0, 0, 0);\n"
"            }\n"
"            QPushButton:pressed {\n"
"                background-color: red;\n"
"                border: 2px solid red;\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"                border-style: inset;\n"
"                }")
        self.savedatabutton.setCheckable(True)
        self.savedatabutton.setObjectName("savedatabutton")
        self.recordbutton = QtWidgets.QPushButton(self.frame_3)
        self.recordbutton.setGeometry(QtCore.QRect(170, 110, 131, 31))
        self.recordbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 6px;\n"
"            }\n"
"      \n"
"            QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 0);\n"
"                font: bold 16px;\n"
"                min-width: 1em;\n"
"               \n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.recordbutton.setCheckable(True)
        self.recordbutton.setObjectName("recordbutton")
        self.framelabel = QtWidgets.QLabel(self.frame_3)
        self.framelabel.setGeometry(QtCore.QRect(30, 80, 121, 21))
        self.framelabel.setMaximumSize(QtCore.QSize(300, 25))
        self.framelabel.setObjectName("framelabel")
        self.leftbutton = QtWidgets.QToolButton(self.frame_3)
        self.leftbutton.setGeometry(QtCore.QRect(180, 80, 51, 21))
        self.leftbutton.setStyleSheet("QToolButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: px;\n"
"                border-radius: 10px;\n"
"                border: 2px solid rgb(0, 0, 0);\n"
"                font: bold 16px;\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QToolButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border: 2px solid rgb(0, 255, 0);\n"
"            }\n"
"            QToolButton:pressed {\n"
"                background-color: rgb(100, 100, 100);\n"
"                border: 2px solid rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.leftbutton.setAutoRepeat(False)
        self.leftbutton.setAutoRepeatDelay(0)
        self.leftbutton.setAutoRepeatInterval(1)
        self.leftbutton.setArrowType(QtCore.Qt.LeftArrow)
        self.leftbutton.setObjectName("leftbutton")
        self.rightbutton = QtWidgets.QToolButton(self.frame_3)
        self.rightbutton.setGeometry(QtCore.QRect(240, 80, 50, 21))
        self.rightbutton.setStyleSheet("QToolButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: px;\n"
"                border-radius: 10px;\n"
"                border: 2px solid rgb(0, 0, 0);\n"
"                font: bold 16px;\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QToolButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border: 2px solid rgb(0, 255, 0);\n"
"            }\n"
"            QToolButton:pressed {\n"
"                background-color: rgb(100, 100, 100);\n"
"                border: 2px solid rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.rightbutton.setAutoRepeat(False)
        self.rightbutton.setAutoRepeatInterval(1)
        self.rightbutton.setArrowType(QtCore.Qt.RightArrow)
        self.rightbutton.setObjectName("rightbutton")
        self.exposurelabel = QtWidgets.QLabel(self.frame_3)
        self.exposurelabel.setGeometry(QtCore.QRect(20, 210, 111, 25))
        self.exposurelabel.setMaximumSize(QtCore.QSize(150, 25))
        self.exposurelabel.setObjectName("exposurelabel")
        self.exposurebox = QtWidgets.QSpinBox(self.frame_3)
        self.exposurebox.setGeometry(QtCore.QRect(10, 250, 81, 21))
        self.exposurebox.setMinimum(100)
        self.exposurebox.setMaximum(100000)
        self.exposurebox.setSingleStep(100)
        self.exposurebox.setProperty("value", 5000)
        self.exposurebox.setDisplayIntegerBase(10)
        self.exposurebox.setObjectName("exposurebox")
        self.objectivelabel = QtWidgets.QLabel(self.frame_3)
        self.objectivelabel.setGeometry(QtCore.QRect(120, 210, 111, 25))
        self.objectivelabel.setMaximumSize(QtCore.QSize(150, 25))
        self.objectivelabel.setObjectName("objectivelabel")
        self.objectivebox = QtWidgets.QSpinBox(self.frame_3)
        self.objectivebox.setGeometry(QtCore.QRect(120, 250, 61, 21))
        self.objectivebox.setMinimum(1)
        self.objectivebox.setMaximum(100)
        self.objectivebox.setSingleStep(5)
        self.objectivebox.setProperty("value", 10)
        self.objectivebox.setDisplayIntegerBase(10)
        self.objectivebox.setObjectName("objectivebox")
        self.toggledisplayvisualscheckbox = QtWidgets.QCheckBox(self.frame_3)
        self.toggledisplayvisualscheckbox.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.toggledisplayvisualscheckbox.setChecked(True)
        self.toggledisplayvisualscheckbox.setObjectName("toggledisplayvisualscheckbox")
        self.exposurelabel_3 = QtWidgets.QLabel(self.frame_3)
        self.exposurelabel_3.setGeometry(QtCore.QRect(260, 180, 41, 20))
        self.exposurelabel_3.setMaximumSize(QtCore.QSize(150, 25))
        self.exposurelabel_3.setObjectName("exposurelabel_3")
        self.videoNameLineEdit = QtWidgets.QLineEdit(self.frame_3)
        self.videoNameLineEdit.setGeometry(QtCore.QRect(10, 170, 241, 31))
        self.videoNameLineEdit.setObjectName("videoNameLineEdit")
        self.exposurelabel_2 = QtWidgets.QLabel(self.frame_3)
        self.exposurelabel_2.setGeometry(QtCore.QRect(10, 150, 150, 16))
        self.exposurelabel_2.setMaximumSize(QtCore.QSize(150, 25))
        self.exposurelabel_2.setObjectName("exposurelabel_2")
        self.memorylabel = QtWidgets.QLabel(self.frame_3)
        self.memorylabel.setGeometry(QtCore.QRect(210, 210, 101, 31))
        self.memorylabel.setObjectName("memorylabel")
        self.memorybox = QtWidgets.QSpinBox(self.frame_3)
        self.memorybox.setGeometry(QtCore.QRect(220, 250, 71, 21))
        self.memorybox.setMinimum(1)
        self.memorybox.setMaximum(100)
        self.memorybox.setProperty("value", 15)
        self.memorybox.setObjectName("memorybox")
        self.startbutton = QtWidgets.QPushButton(self.frame_3)
        self.startbutton.setGeometry(QtCore.QRect(10, 0, 281, 41))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.startbutton.setFont(font)
        self.startbutton.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.startbutton.setStyleSheet("\n"
"QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 255);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 255);\n"
"                min-width: 1em;\n"
"                padding: 6px;\n"
"              font: bold 25px;\n"
"            }\n"
"      \n"
"            QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 0);\n"
"                font: bold 25px;\n"
"                min-width: 1em;\n"
"               \n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(0, 255, 0);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.startbutton.setCheckable(True)
        self.startbutton.setObjectName("startbutton")
        self.trackerparamsframe = QtWidgets.QFrame(self.dockWidgetContents)
        self.trackerparamsframe.setGeometry(QtCore.QRect(10, 310, 311, 231))
        self.trackerparamsframe.setStyleSheet(" color: rgb(0, 0, 0);\n"
" background-color: rgb(255, 255, 255);\n"
"font-size: 10pt;")
        self.trackerparamsframe.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.trackerparamsframe.setFrameShadow(QtWidgets.QFrame.Raised)
        self.trackerparamsframe.setObjectName("trackerparamsframe")
        self.robotmasklowerbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.robotmasklowerbox.setGeometry(QtCore.QRect(120, 140, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.robotmasklowerbox.setFont(font)
        self.robotmasklowerbox.setStyleSheet("")
        self.robotmasklowerbox.setMaximum(255)
        self.robotmasklowerbox.setSingleStep(1)
        self.robotmasklowerbox.setProperty("value", 0)
        self.robotmasklowerbox.setObjectName("robotmasklowerbox")
        self.maskthreshlabel = QtWidgets.QLabel(self.trackerparamsframe)
        self.maskthreshlabel.setGeometry(QtCore.QRect(10, 140, 81, 16))
        self.maskthreshlabel.setMaximumSize(QtCore.QSize(150, 25))
        self.maskthreshlabel.setObjectName("maskthreshlabel")
        self.robotmaskdilationbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.robotmaskdilationbox.setGeometry(QtCore.QRect(120, 200, 61, 21))
        self.robotmaskdilationbox.setMaximum(40)
        self.robotmaskdilationbox.setObjectName("robotmaskdilationbox")
        self.maskdilationlabel = QtWidgets.QLabel(self.trackerparamsframe)
        self.maskdilationlabel.setGeometry(QtCore.QRect(10, 200, 81, 16))
        self.maskdilationlabel.setMaximumSize(QtCore.QSize(150, 25))
        self.maskdilationlabel.setObjectName("maskdilationlabel")
        self.robotcroplengthbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.robotcroplengthbox.setGeometry(QtCore.QRect(120, 80, 61, 21))
        self.robotcroplengthbox.setMinimum(5)
        self.robotcroplengthbox.setMaximum(1000)
        self.robotcroplengthbox.setSingleStep(1)
        self.robotcroplengthbox.setProperty("value", 40)
        self.robotcroplengthbox.setDisplayIntegerBase(10)
        self.robotcroplengthbox.setObjectName("robotcroplengthbox")
        self.croplengthlabel = QtWidgets.QLabel(self.trackerparamsframe)
        self.croplengthlabel.setGeometry(QtCore.QRect(10, 80, 91, 20))
        self.croplengthlabel.setMaximumSize(QtCore.QSize(150, 25))
        self.croplengthlabel.setObjectName("croplengthlabel")
        self.robotmaskblurbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.robotmaskblurbox.setGeometry(QtCore.QRect(120, 110, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.robotmaskblurbox.setFont(font)
        self.robotmaskblurbox.setStyleSheet("")
        self.robotmaskblurbox.setMaximum(40)
        self.robotmaskblurbox.setSingleStep(1)
        self.robotmaskblurbox.setProperty("value", 0)
        self.robotmaskblurbox.setObjectName("robotmaskblurbox")
        self.maskblurlabel = QtWidgets.QLabel(self.trackerparamsframe)
        self.maskblurlabel.setGeometry(QtCore.QRect(10, 110, 61, 16))
        self.maskblurlabel.setMaximumSize(QtCore.QSize(150, 25))
        self.maskblurlabel.setObjectName("maskblurlabel")
        self.maskbutton = QtWidgets.QPushButton(self.trackerparamsframe)
        self.maskbutton.setGeometry(QtCore.QRect(5, 8, 101, 31))
        self.maskbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-style: inset;\n"
"              border-color: rgb(0, 255, 0);\n"
"            }")
        self.maskbutton.setCheckable(True)
        self.maskbutton.setChecked(False)
        self.maskbutton.setObjectName("maskbutton")
        self.robotmask_radio = QtWidgets.QRadioButton(self.trackerparamsframe)
        self.robotmask_radio.setGeometry(QtCore.QRect(120, 50, 91, 30))
        self.robotmask_radio.setChecked(True)
        self.robotmask_radio.setObjectName("robotmask_radio")
        self.cellmask_radio = QtWidgets.QRadioButton(self.trackerparamsframe)
        self.cellmask_radio.setGeometry(QtCore.QRect(220, 50, 81, 30))
        self.cellmask_radio.setObjectName("cellmask_radio")
        self.maskinvert_checkBox = QtWidgets.QCheckBox(self.trackerparamsframe)
        self.maskinvert_checkBox.setGeometry(QtCore.QRect(150, 10, 131, 30))
        self.maskinvert_checkBox.setChecked(False)
        self.maskinvert_checkBox.setObjectName("maskinvert_checkBox")
        self.cellmaskblurbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.cellmaskblurbox.setGeometry(QtCore.QRect(220, 110, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.cellmaskblurbox.setFont(font)
        self.cellmaskblurbox.setStyleSheet("")
        self.cellmaskblurbox.setMaximum(40)
        self.cellmaskblurbox.setSingleStep(1)
        self.cellmaskblurbox.setProperty("value", 0)
        self.cellmaskblurbox.setObjectName("cellmaskblurbox")
        self.cellmasklowerbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.cellmasklowerbox.setGeometry(QtCore.QRect(220, 140, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.cellmasklowerbox.setFont(font)
        self.cellmasklowerbox.setStyleSheet("")
        self.cellmasklowerbox.setMaximum(255)
        self.cellmasklowerbox.setSingleStep(1)
        self.cellmasklowerbox.setProperty("value", 0)
        self.cellmasklowerbox.setObjectName("cellmasklowerbox")
        self.cellmaskdilationbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.cellmaskdilationbox.setGeometry(QtCore.QRect(220, 200, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.cellmaskdilationbox.setFont(font)
        self.cellmaskdilationbox.setStyleSheet("")
        self.cellmaskdilationbox.setMaximum(40)
        self.cellmaskdilationbox.setSingleStep(1)
        self.cellmaskdilationbox.setProperty("value", 0)
        self.cellmaskdilationbox.setObjectName("cellmaskdilationbox")
        self.cellcroplengthbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.cellcroplengthbox.setGeometry(QtCore.QRect(220, 80, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.cellcroplengthbox.setFont(font)
        self.cellcroplengthbox.setStyleSheet("")
        self.cellcroplengthbox.setMinimum(5)
        self.cellcroplengthbox.setMaximum(400)
        self.cellcroplengthbox.setSingleStep(1)
        self.cellcroplengthbox.setProperty("value", 40)
        self.cellcroplengthbox.setObjectName("cellcroplengthbox")
        self.label = QtWidgets.QLabel(self.trackerparamsframe)
        self.label.setGeometry(QtCore.QRect(210, 45, 2, 231))
        self.label.setStyleSheet("background-color: rgb(0,0,0); ")
        self.label.setObjectName("label")
        self.label_10 = QtWidgets.QLabel(self.trackerparamsframe)
        self.label_10.setGeometry(QtCore.QRect(110, 45, 2, 231))
        self.label_10.setStyleSheet("background-color: rgb(0,0,0); ")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.trackerparamsframe)
        self.label_11.setGeometry(QtCore.QRect(0, 75, 311, 2))
        self.label_11.setStyleSheet("background-color: rgb(0,0,0); ")
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.trackerparamsframe)
        self.label_12.setGeometry(QtCore.QRect(0, 45, 311, 2))
        self.label_12.setStyleSheet("background-color: rgb(0,0,0); ")
        self.label_12.setObjectName("label_12")
        self.robotmaskupperbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.robotmaskupperbox.setGeometry(QtCore.QRect(120, 170, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.robotmaskupperbox.setFont(font)
        self.robotmaskupperbox.setStyleSheet("")
        self.robotmaskupperbox.setMinimum(0)
        self.robotmaskupperbox.setMaximum(255)
        self.robotmaskupperbox.setSingleStep(1)
        self.robotmaskupperbox.setProperty("value", 128)
        self.robotmaskupperbox.setObjectName("robotmaskupperbox")
        self.cellmaskupperbox = QtWidgets.QSpinBox(self.trackerparamsframe)
        self.cellmaskupperbox.setGeometry(QtCore.QRect(220, 170, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.cellmaskupperbox.setFont(font)
        self.cellmaskupperbox.setStyleSheet("")
        self.cellmaskupperbox.setMinimum(0)
        self.cellmaskupperbox.setMaximum(255)
        self.cellmaskupperbox.setSingleStep(1)
        self.cellmaskupperbox.setProperty("value", 128)
        self.cellmaskupperbox.setObjectName("cellmaskupperbox")
        self.maskthreshlabel_2 = QtWidgets.QLabel(self.trackerparamsframe)
        self.maskthreshlabel_2.setGeometry(QtCore.QRect(10, 170, 81, 16))
        self.maskthreshlabel_2.setMaximumSize(QtCore.QSize(150, 25))
        self.maskthreshlabel_2.setObjectName("maskthreshlabel_2")
        self.cleartrackingbutton = QtWidgets.QPushButton(self.trackerparamsframe)
        self.cleartrackingbutton.setGeometry(QtCore.QRect(20, 51, 71, 20))
        self.cleartrackingbutton.setMinimumSize(QtCore.QSize(22, 0))
        self.cleartrackingbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"      \n"
"            }\n"
"      \n"
"\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"\n"
"            }")
        self.cleartrackingbutton.setCheckable(False)
        self.cleartrackingbutton.setObjectName("cleartrackingbutton")
        self.robotparamsframe = QtWidgets.QFrame(self.dockWidgetContents)
        self.robotparamsframe.setGeometry(QtCore.QRect(10, 549, 311, 61))
        self.robotparamsframe.setStyleSheet(" color: rgb(255, 255, 255);\n"
" background-color: rgb(0, 0, 0);\n"
"font-size: 8pt; font: Arial;")
        self.robotparamsframe.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.robotparamsframe.setFrameShadow(QtWidgets.QFrame.Raised)
        self.robotparamsframe.setObjectName("robotparamsframe")
        self.robotsizelabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotsizelabel.setGeometry(QtCore.QRect(20, 0, 51, 20))
        self.robotsizelabel.setMaximumSize(QtCore.QSize(300, 50))
        self.robotsizelabel.setObjectName("robotsizelabel")
        self.robotvelocitylabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotvelocitylabel.setGeometry(QtCore.QRect(90, 0, 81, 21))
        self.robotvelocitylabel.setMaximumSize(QtCore.QSize(300, 50))
        self.robotvelocitylabel.setObjectName("robotvelocitylabel")
        self.robotblurlabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotblurlabel.setGeometry(QtCore.QRect(260, 0, 61, 20))
        self.robotblurlabel.setMaximumSize(QtCore.QSize(16777215, 50))
        self.robotblurlabel.setStyleSheet("")
        self.robotblurlabel.setObjectName("robotblurlabel")
        self.blurlcdnum = QtWidgets.QLCDNumber(self.robotparamsframe)
        self.blurlcdnum.setGeometry(QtCore.QRect(240, 20, 61, 20))
        self.blurlcdnum.setStyleSheet("background-color: rgb(0,0,0); \n"
"color: rgb(0,255,0);")
        self.blurlcdnum.setLineWidth(0)
        self.blurlcdnum.setMidLineWidth(0)
        self.blurlcdnum.setSmallDecimalPoint(False)
        self.blurlcdnum.setDigitCount(3)
        self.blurlcdnum.setMode(QtWidgets.QLCDNumber.Dec)
        self.blurlcdnum.setSegmentStyle(QtWidgets.QLCDNumber.Outline)
        self.blurlcdnum.setProperty("value", 137.0)
        self.blurlcdnum.setObjectName("blurlcdnum")
        self.robotvelocityunitslabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotvelocityunitslabel.setGeometry(QtCore.QRect(100, 40, 41, 20))
        self.robotvelocityunitslabel.setMaximumSize(QtCore.QSize(300, 50))
        self.robotvelocityunitslabel.setObjectName("robotvelocityunitslabel")
        self.sizelcdnum = QtWidgets.QLCDNumber(self.robotparamsframe)
        self.sizelcdnum.setGeometry(QtCore.QRect(0, 20, 61, 20))
        self.sizelcdnum.setStyleSheet("background-color: rgb(0,0,0); \n"
"color: rgb(0,255,0);")
        self.sizelcdnum.setLineWidth(0)
        self.sizelcdnum.setMidLineWidth(0)
        self.sizelcdnum.setSmallDecimalPoint(False)
        self.sizelcdnum.setDigitCount(3)
        self.sizelcdnum.setMode(QtWidgets.QLCDNumber.Dec)
        self.sizelcdnum.setSegmentStyle(QtWidgets.QLCDNumber.Outline)
        self.sizelcdnum.setProperty("value", 20.0)
        self.sizelcdnum.setObjectName("sizelcdnum")
        self.vellcdnum = QtWidgets.QLCDNumber(self.robotparamsframe)
        self.vellcdnum.setGeometry(QtCore.QRect(80, 20, 41, 20))
        self.vellcdnum.setStyleSheet("background-color: rgb(0,0,0); \n"
"color: rgb(0,255,0);")
        self.vellcdnum.setLineWidth(0)
        self.vellcdnum.setMidLineWidth(0)
        self.vellcdnum.setSmallDecimalPoint(False)
        self.vellcdnum.setDigitCount(3)
        self.vellcdnum.setMode(QtWidgets.QLCDNumber.Dec)
        self.vellcdnum.setSegmentStyle(QtWidgets.QLCDNumber.Outline)
        self.vellcdnum.setProperty("value", 17.1)
        self.vellcdnum.setObjectName("vellcdnum")
        self.robotsizeunitslabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotsizeunitslabel.setGeometry(QtCore.QRect(30, 40, 31, 20))
        self.robotsizeunitslabel.setMaximumSize(QtCore.QSize(300, 50))
        self.robotsizeunitslabel.setObjectName("robotsizeunitslabel")
        self.robotaccellabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotaccellabel.setGeometry(QtCore.QRect(180, 0, 61, 21))
        self.robotaccellabel.setMaximumSize(QtCore.QSize(300, 50))
        self.robotaccellabel.setObjectName("robotaccellabel")
        self.robotaccelunitslabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotaccelunitslabel.setGeometry(QtCore.QRect(170, 40, 41, 20))
        self.robotaccelunitslabel.setMaximumSize(QtCore.QSize(300, 50))
        self.robotaccelunitslabel.setObjectName("robotaccelunitslabel")
        self.accellcdnum = QtWidgets.QLCDNumber(self.robotparamsframe)
        self.accellcdnum.setGeometry(QtCore.QRect(160, 20, 41, 20))
        self.accellcdnum.setStyleSheet("background-color: rgb(0,0,0); \n"
"color: rgb(0,255,0);")
        self.accellcdnum.setLineWidth(0)
        self.accellcdnum.setMidLineWidth(0)
        self.accellcdnum.setSmallDecimalPoint(False)
        self.accellcdnum.setDigitCount(3)
        self.accellcdnum.setMode(QtWidgets.QLCDNumber.Dec)
        self.accellcdnum.setSegmentStyle(QtWidgets.QLCDNumber.Outline)
        self.accellcdnum.setProperty("value", 17.1)
        self.accellcdnum.setObjectName("accellcdnum")
        self.robotblurunitslabel = QtWidgets.QLabel(self.robotparamsframe)
        self.robotblurunitslabel.setGeometry(QtCore.QRect(260, 40, 41, 20))
        self.robotblurunitslabel.setMaximumSize(QtCore.QSize(300, 50))
        self.robotblurunitslabel.setObjectName("robotblurunitslabel")
        self.CroppedVideoFeedLabel = QtWidgets.QLabel(self.dockWidgetContents)
        self.CroppedVideoFeedLabel.setGeometry(QtCore.QRect(10, 615, 310, 310))
        self.CroppedVideoFeedLabel.setStyleSheet("background-color: rgb(0,0,0); border:2px solid rgb(255, 0, 0); ")
        self.CroppedVideoFeedLabel.setText("")
        self.CroppedVideoFeedLabel.setObjectName("CroppedVideoFeedLabel")
        self.resetdefaultbutton = QtWidgets.QPushButton(self.dockWidgetContents)
        self.resetdefaultbutton.setGeometry(QtCore.QRect(20, 935, 71, 25))
        self.resetdefaultbutton.setMaximumSize(QtCore.QSize(300, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.resetdefaultbutton.setFont(font)
        self.resetdefaultbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(100, 100, 100);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(100, 100, 100);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(200, 200, 200);\n"
"                color: rgb(0, 0, 0);\n"
"            }\n"
"            QPushButton:pressed {\n"
"                background-color: rgb(200, 200, 200);\n"
"         \n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"                border-style: inset;\n"
"                }")
        self.resetdefaultbutton.setObjectName("resetdefaultbutton")
        self.croppedmasktoggle = QtWidgets.QPushButton(self.dockWidgetContents)
        self.croppedmasktoggle.setGeometry(QtCore.QRect(125, 935, 71, 25))
        self.croppedmasktoggle.setMaximumSize(QtCore.QSize(300, 25))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.croppedmasktoggle.setFont(font)
        self.croppedmasktoggle.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-style: inset;\n"
"              border-color: rgb(0, 255, 0);\n"
"            }")
        self.croppedmasktoggle.setCheckable(True)
        self.croppedmasktoggle.setObjectName("croppedmasktoggle")
        self.croppedrecordbutton = QtWidgets.QPushButton(self.dockWidgetContents)
        self.croppedrecordbutton.setGeometry(QtCore.QRect(230, 935, 71, 25))
        self.croppedrecordbutton.setMinimumSize(QtCore.QSize(22, 0))
        self.croppedrecordbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"      \n"
"            }\n"
"      \n"
"            QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 0);\n"
"                font: bold 16px;\n"
"                min-width: 1em;\n"
"               \n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.croppedrecordbutton.setCheckable(True)
        self.croppedrecordbutton.setObjectName("croppedrecordbutton")
        self.dockWidget.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockWidget)
        self.dockWidget_2 = QtWidgets.QDockWidget(MainWindow)
        self.dockWidget_2.setMinimumSize(QtCore.QSize(411, 1000))
        self.dockWidget_2.setStyleSheet("font-size: 10pt;")
        self.dockWidget_2.setObjectName("dockWidget_2")
        self.dockWidgetContents_4 = QtWidgets.QWidget()
        self.dockWidgetContents_4.setObjectName("dockWidgetContents_4")
        self.frame = QtWidgets.QFrame(self.dockWidgetContents_4)
        self.frame.setGeometry(QtCore.QRect(0, 0, 391, 212))
        self.frame.setStyleSheet(" color: rgb(0, 0, 0);\n"
" background-color: rgb(255, 255, 255);\n"
"font-size: 10pt;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.led = QtWidgets.QLabel(self.frame)
        self.led.setGeometry(QtCore.QRect(360, 170, 21, 21))
        self.led.setStyleSheet("\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 12px;\n"
"                border-color: rgb(255, 0, 0);\n"
"         \n"
"                padding: 6px;")
        self.led.setText("")
        self.led.setObjectName("led")
        self.swimradio = QtWidgets.QRadioButton(self.frame)
        self.swimradio.setGeometry(QtCore.QRect(60, 120, 71, 20))
        self.swimradio.setObjectName("swimradio")
        self.applyacousticbutton = QtWidgets.QPushButton(self.frame)
        self.applyacousticbutton.setGeometry(QtCore.QRect(200, 170, 71, 21))
        self.applyacousticbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(0, 0, 0);\n"
"                border-style: inset;\n"
"            }\n"
"\n"
"         QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(200, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"}")
        self.applyacousticbutton.setCheckable(True)
        self.applyacousticbutton.setObjectName("applyacousticbutton")
        self.rollradio = QtWidgets.QRadioButton(self.frame)
        self.rollradio.setGeometry(QtCore.QRect(10, 120, 51, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.rollradio.setFont(font)
        self.rollradio.setChecked(True)
        self.rollradio.setObjectName("rollradio")
        self.joystickbutton = QtWidgets.QPushButton(self.frame)
        self.joystickbutton.setGeometry(QtCore.QRect(10, 80, 161, 31))
        self.joystickbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(0, 0, 0);\n"
"                background-color: rgb(0, 255, 255);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 255, 255);\n"
"                min-width: 1em;\n"
"\n"
"                font: bold 20px;\n"
"            }\n"
"      \n"
"            QPushButton:checked {\n"
"                color: rgb(0, 0, 0);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 0);\n"
"                font: bold 21px;\n"
"                min-width: 1em;\n"
"              padding-left: 5px;\n"
"                padding-top: 5px;\n"
"               \n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.joystickbutton.setCheckable(True)
        self.joystickbutton.setObjectName("joystickbutton")
        self.controlbutton = QtWidgets.QPushButton(self.frame)
        self.controlbutton.setGeometry(QtCore.QRect(10, 40, 161, 31))
        self.controlbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 255);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 255);\n"
"                min-width: 1em;\n"
"\n"
"                font: bold 20px;\n"
"            }\n"
"      \n"
"            QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 0);\n"
"                font: bold 21px;\n"
"                min-width: 1em;\n"
"               \n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(0, 255, 0);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.controlbutton.setCheckable(True)
        self.controlbutton.setObjectName("controlbutton")
        self.orientradio = QtWidgets.QRadioButton(self.frame)
        self.orientradio.setGeometry(QtCore.QRect(120, 120, 71, 20))
        self.orientradio.setObjectName("orientradio")
        self.acousticfreq_spinBox = QtWidgets.QSpinBox(self.frame)
        self.acousticfreq_spinBox.setGeometry(QtCore.QRect(100, 160, 91, 41))
        self.acousticfreq_spinBox.setMaximum(3000000)
        self.acousticfreq_spinBox.setSingleStep(1000)
        self.acousticfreq_spinBox.setProperty("value", 1000000)
        self.acousticfreq_spinBox.setObjectName("acousticfreq_spinBox")
        self.acousticfreqlabel = QtWidgets.QLabel(self.frame)
        self.acousticfreqlabel.setGeometry(QtCore.QRect(10, 160, 91, 41))
        self.acousticfreqlabel.setStyleSheet("")
        self.acousticfreqlabel.setObjectName("acousticfreqlabel")
        self.autoacousticbutton = QtWidgets.QPushButton(self.frame)
        self.autoacousticbutton.setGeometry(QtCore.QRect(280, 170, 71, 21))
        self.autoacousticbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(0, 0, 0);\n"
"                border-style: inset;\n"
"            }\n"
"\n"
"         QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(200, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"}")
        self.autoacousticbutton.setCheckable(True)
        self.autoacousticbutton.setObjectName("autoacousticbutton")
        self.gradient_status_checkbox = QtWidgets.QCheckBox(self.frame)
        self.gradient_status_checkbox.setGeometry(QtCore.QRect(260, 120, 101, 21))
        self.gradient_status_checkbox.setObjectName("gradient_status_checkbox")
        self.import_excel_actions = QtWidgets.QPushButton(self.frame)
        self.import_excel_actions.setGeometry(QtCore.QRect(190, 40, 181, 31))
        self.import_excel_actions.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(150, 150, 150);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(150, 150 150);\n"
"                min-width: 1em;\n"
"                font: bold 15px;\n"
"            }\n"
"\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.import_excel_actions.setCheckable(True)
        self.import_excel_actions.setObjectName("import_excel_actions")
        self.apply_actions = QtWidgets.QPushButton(self.frame)
        self.apply_actions.setGeometry(QtCore.QRect(190, 80, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.apply_actions.setFont(font)
        self.apply_actions.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255,255);\n"
"                background-color: rgb(255, 0, 255);\n"
"                border-style: outset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 255);\n"
"                min-width: 1em;\n"
"                font: bold 15px;\n"
"            }\n"
"      \n"
"            QPushButton:checked {\n"
"                color: rgb(0, 0, 0);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: inset;\n"
"                border-width: 3px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 0);\n"
"                font: bold 16px;\n"
"                min-width: 1em;\n"
"              padding-left: 5px;\n"
"                padding-top: 5px;\n"
"               \n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.apply_actions.setCheckable(True)
        self.apply_actions.setObjectName("apply_actions")
        self.equal_field_checkbox = QtWidgets.QCheckBox(self.frame)
        self.equal_field_checkbox.setGeometry(QtCore.QRect(260, 140, 111, 21))
        self.equal_field_checkbox.setObjectName("equal_field_checkbox")
        self.pushradio = QtWidgets.QRadioButton(self.frame)
        self.pushradio.setGeometry(QtCore.QRect(180, 120, 71, 20))
        self.pushradio.setObjectName("pushradio")
        self.selectport = QtWidgets.QLabel(self.frame)
        self.selectport.setGeometry(QtCore.QRect(10, 10, 150, 16))
        self.selectport.setMaximumSize(QtCore.QSize(150, 25))
        self.selectport.setObjectName("selectport")
        self.arduino_portbox = QtWidgets.QComboBox(self.frame)
        self.arduino_portbox.setGeometry(QtCore.QRect(130, 10, 251, 21))
        self.arduino_portbox.setObjectName("arduino_portbox")
        self.controlparamsframe = QtWidgets.QFrame(self.dockWidgetContents_4)
        self.controlparamsframe.setGeometry(QtCore.QRect(0, 390, 391, 95))
        self.controlparamsframe.setStyleSheet(" color: rgb(0, 0, 0);\n"
" background-color: rgb(255, 255, 255);\n"
"font-size: 10pt;")
        self.controlparamsframe.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.controlparamsframe.setFrameShadow(QtWidgets.QFrame.Raised)
        self.controlparamsframe.setObjectName("controlparamsframe")
        self.ricochet_effect_checkbox = QtWidgets.QCheckBox(self.controlparamsframe)
        self.ricochet_effect_checkbox.setGeometry(QtCore.QRect(120, 70, 31, 21))
        self.ricochet_effect_checkbox.setText("")
        self.ricochet_effect_checkbox.setChecked(False)
        self.ricochet_effect_checkbox.setObjectName("ricochet_effect_checkbox")
        self.ricocheteffectlabel = QtWidgets.QLabel(self.controlparamsframe)
        self.ricocheteffectlabel.setGeometry(QtCore.QRect(10, 70, 101, 21))
        self.ricocheteffectlabel.setObjectName("ricocheteffectlabel")
        self.arrivalthreshlabel = QtWidgets.QLabel(self.controlparamsframe)
        self.arrivalthreshlabel.setGeometry(QtCore.QRect(10, 10, 131, 21))
        self.arrivalthreshlabel.setObjectName("arrivalthreshlabel")
        self.arrivalthreshbox = QtWidgets.QSpinBox(self.controlparamsframe)
        self.arrivalthreshbox.setGeometry(QtCore.QRect(130, 10, 51, 21))
        self.arrivalthreshbox.setMinimum(1)
        self.arrivalthreshbox.setMaximum(400)
        self.arrivalthreshbox.setProperty("value", 25)
        self.arrivalthreshbox.setObjectName("arrivalthreshbox")
        self.RRTtreesizebox = QtWidgets.QSpinBox(self.controlparamsframe)
        self.RRTtreesizebox.setGeometry(QtCore.QRect(130, 40, 51, 21))
        self.RRTtreesizebox.setMinimum(1)
        self.RRTtreesizebox.setMaximum(100)
        self.RRTtreesizebox.setProperty("value", 25)
        self.RRTtreesizebox.setObjectName("RRTtreesizebox")
        self.RRTtreesizelabel_2 = QtWidgets.QLabel(self.controlparamsframe)
        self.RRTtreesizelabel_2.setGeometry(QtCore.QRect(10, 40, 121, 21))
        self.RRTtreesizelabel_2.setObjectName("RRTtreesizelabel_2")
        self.corridorwidthbox = QtWidgets.QSpinBox(self.controlparamsframe)
        self.corridorwidthbox.setGeometry(QtCore.QRect(330, 10, 51, 21))
        self.corridorwidthbox.setMinimum(2)
        self.corridorwidthbox.setMaximum(1000)
        self.corridorwidthbox.setProperty("value", 10)
        self.corridorwidthbox.setObjectName("corridorwidthbox")
        self.corriderwidthlabel = QtWidgets.QLabel(self.controlparamsframe)
        self.corriderwidthlabel.setGeometry(QtCore.QRect(200, 10, 121, 21))
        self.corriderwidthlabel.setObjectName("corriderwidthlabel")
        self.approachdistancelabel = QtWidgets.QLabel(self.controlparamsframe)
        self.approachdistancelabel.setGeometry(QtCore.QRect(200, 40, 121, 21))
        self.approachdistancelabel.setObjectName("approachdistancelabel")
        self.approachdistancebox = QtWidgets.QSpinBox(self.controlparamsframe)
        self.approachdistancebox.setGeometry(QtCore.QRect(330, 40, 51, 21))
        self.approachdistancebox.setMinimum(1)
        self.approachdistancebox.setMaximum(400)
        self.approachdistancebox.setProperty("value", 50)
        self.approachdistancebox.setObjectName("approachdistancebox")
        self.approachdistancelabel_2 = QtWidgets.QLabel(self.controlparamsframe)
        self.approachdistancelabel_2.setGeometry(QtCore.QRect(200, 70, 121, 21))
        self.approachdistancelabel_2.setObjectName("approachdistancelabel_2")
        self.spinningfreqbox = QtWidgets.QSpinBox(self.controlparamsframe)
        self.spinningfreqbox.setGeometry(QtCore.QRect(330, 70, 51, 21))
        self.spinningfreqbox.setMinimum(1)
        self.spinningfreqbox.setMaximum(100)
        self.spinningfreqbox.setProperty("value", 10)
        self.spinningfreqbox.setObjectName("spinningfreqbox")
        self.magneticfieldsimlabel = QtWidgets.QLabel(self.dockWidgetContents_4)
        self.magneticfieldsimlabel.setGeometry(QtCore.QRect(40, 630, 310, 310))
        self.magneticfieldsimlabel.setStyleSheet("background-color: rgb(0,0,0); border:2px solid rgb(255, 0, 0); ")
        self.magneticfieldsimlabel.setText("")
        self.magneticfieldsimlabel.setObjectName("magneticfieldsimlabel")
        self.simulationbutton = QtWidgets.QPushButton(self.dockWidgetContents_4)
        self.simulationbutton.setGeometry(QtCore.QRect(110, 950, 171, 25))
        self.simulationbutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 255, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 100, 0);\n"
"                min-width: 1em;\n"
"                padding: 2px;\n"
"            }\n"
"      \n"
"            QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 100, 0);\n"
"                border-style: inset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(255, 0, 0);\n"
"                font: bold 16px;\n"
"                min-width: 1em;\n"
"\n"
"               \n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-color: rgb(100, 100, 100);\n"
"                padding-left: 5px;\n"
"                padding-top: 5px;\n"
"            }")
        self.simulationbutton.setCheckable(True)
        self.simulationbutton.setObjectName("simulationbutton")
        self.frame_2 = QtWidgets.QFrame(self.dockWidgetContents_4)
        self.frame_2.setGeometry(QtCore.QRect(0, 220, 391, 161))
        self.frame_2.setStyleSheet(" color: rgb(0, 0, 0);\n"
" background-color: rgb(255, 255, 255);\n"
"font-size: 10pt; font: Arial;")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_6 = QtWidgets.QLabel(self.frame_2)
        self.label_6.setGeometry(QtCore.QRect(20, 10, 131, 21))
        self.label_6.setObjectName("label_6")
        self.manualfieldBx = QtWidgets.QSpinBox(self.frame_2)
        self.manualfieldBx.setGeometry(QtCore.QRect(35, 40, 71, 25))
        self.manualfieldBx.setMinimum(-100)
        self.manualfieldBx.setMaximum(100)
        self.manualfieldBx.setProperty("value", 0)
        self.manualfieldBx.setObjectName("manualfieldBx")
        self.manualfieldBy = QtWidgets.QSpinBox(self.frame_2)
        self.manualfieldBy.setGeometry(QtCore.QRect(35, 70, 71, 25))
        self.manualfieldBy.setMinimum(-100)
        self.manualfieldBy.setMaximum(100)
        self.manualfieldBy.setProperty("value", 0)
        self.manualfieldBy.setDisplayIntegerBase(10)
        self.manualfieldBy.setObjectName("manualfieldBy")
        self.manualfieldBz = QtWidgets.QSpinBox(self.frame_2)
        self.manualfieldBz.setGeometry(QtCore.QRect(35, 100, 71, 25))
        self.manualfieldBz.setMinimum(-100)
        self.manualfieldBz.setMaximum(100)
        self.manualfieldBz.setProperty("value", 0)
        self.manualfieldBz.setDisplayIntegerBase(10)
        self.manualfieldBz.setObjectName("manualfieldBz")
        self.manualapplybutton = QtWidgets.QPushButton(self.frame_2)
        self.manualapplybutton.setGeometry(QtCore.QRect(40, 130, 191, 21))
        self.manualapplybutton.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(0, 0, 0);\n"
"                border-style: inset;\n"
"            }\n"
"\n"
"         QPushButton:checked {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(255, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(200, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"}")
        self.manualapplybutton.setCheckable(True)
        self.manualapplybutton.setObjectName("manualapplybutton")
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setGeometry(QtCore.QRect(10, 40, 21, 21))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.frame_2)
        self.label_8.setGeometry(QtCore.QRect(10, 70, 21, 21))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.frame_2)
        self.label_9.setGeometry(QtCore.QRect(10, 100, 21, 21))
        self.label_9.setObjectName("label_9")
        self.alphadial = QtWidgets.QDial(self.frame_2)
        self.alphadial.setGeometry(QtCore.QRect(140, 10, 81, 81))
        self.alphadial.setMinimum(0)
        self.alphadial.setMaximum(360)
        self.alphadial.setProperty("value", 90)
        self.alphadial.setNotchesVisible(True)
        self.alphadial.setObjectName("alphadial")
        self.alphaspinBox = QtWidgets.QSpinBox(self.frame_2)
        self.alphaspinBox.setGeometry(QtCore.QRect(180, 100, 61, 22))
        self.alphaspinBox.setMaximum(360)
        self.alphaspinBox.setProperty("value", 90)
        self.alphaspinBox.setObjectName("alphaspinBox")
        self.manualalphalabel = QtWidgets.QLabel(self.frame_2)
        self.manualalphalabel.setGeometry(QtCore.QRect(130, 100, 41, 16))
        self.manualalphalabel.setObjectName("manualalphalabel")
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        self.label_5.setGeometry(QtCore.QRect(290, 0, 91, 21))
        self.label_5.setObjectName("label_5")
        self.label_4 = QtWidgets.QLabel(self.frame_2)
        self.label_4.setGeometry(QtCore.QRect(350, 60, 31, 21))
        self.label_4.setObjectName("label_4")
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setGeometry(QtCore.QRect(350, 40, 31, 21))
        self.label_3.setObjectName("label_3")
        self.bylabel = QtWidgets.QLabel(self.frame_2)
        self.bylabel.setGeometry(QtCore.QRect(260, 40, 61, 21))
        self.bylabel.setObjectName("bylabel")
        self.bxlabel = QtWidgets.QLabel(self.frame_2)
        self.bxlabel.setGeometry(QtCore.QRect(260, 20, 61, 21))
        self.bxlabel.setObjectName("bxlabel")
        self.label_2 = QtWidgets.QLabel(self.frame_2)
        self.label_2.setGeometry(QtCore.QRect(350, 20, 31, 21))
        self.label_2.setObjectName("label_2")
        self.bzlabel = QtWidgets.QLabel(self.frame_2)
        self.bzlabel.setGeometry(QtCore.QRect(260, 60, 61, 21))
        self.bzlabel.setObjectName("bzlabel")
        self.label_13 = QtWidgets.QLabel(self.frame_2)
        self.label_13.setGeometry(QtCore.QRect(250, 0, 2, 161))
        self.label_13.setStyleSheet("background-color: rgb(0,0,0); ")
        self.label_13.setObjectName("label_13")
        self.make_inf_path = QtWidgets.QPushButton(self.frame_2)
        self.make_inf_path.setGeometry(QtCore.QRect(260, 90, 121, 21))
        self.make_inf_path.setStyleSheet("QPushButton {\n"
"                color: rgb(255, 255, 255);\n"
"                background-color: rgb(0, 0, 0);\n"
"                border-style: outset;\n"
"                border-width: 2px;\n"
"                border-radius: 10px;\n"
"                border-color: rgb(0, 0, 0);\n"
"                min-width: 1em;\n"
"                padding: 1px;\n"
"            }\n"
"            QPushButton:hover {\n"
"                background-color: rgb(100, 100, 100);\n"
"                color: rgb(255, 255, 255);\n"
"                border-style: inset;\n"
"              border-color: rgb(0, 255, 0);\n"
"            }")
        self.make_inf_path.setCheckable(True)
        self.make_inf_path.setChecked(False)
        self.make_inf_path.setObjectName("make_inf_path")
        self.infinity_size = QtWidgets.QSpinBox(self.frame_2)
        self.infinity_size.setGeometry(QtCore.QRect(290, 120, 61, 21))
        self.infinity_size.setMinimum(1)
        self.infinity_size.setMaximum(1000)
        self.infinity_size.setSingleStep(100)
        self.infinity_size.setProperty("value", 1000)
        self.infinity_size.setObjectName("infinity_size")
        self.frame_4 = QtWidgets.QFrame(self.dockWidgetContents_4)
        self.frame_4.setGeometry(QtCore.QRect(0, 490, 381, 131))
        self.frame_4.setStyleSheet(" color: rgb(0, 0, 0);\n"
" background-color: rgb(255, 255, 255);\n"
"font-size: 10pt;")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.psidial = QtWidgets.QDial(self.frame_4)
        self.psidial.setGeometry(QtCore.QRect(10, 5, 91, 101))
        self.psidial.setStyleSheet("QDial\n"
"    {\n"
"        background-color:QLinearGradient( \n"
"            x1: 0.177, y1: 0.004, x2: 0.831, y2: 0.911, \n"
"            stop: 0 white, \n"
"            stop: 0.061 white, \n"
"            stop: 0.066 lightgray, \n"
"            stop: 0.5 #242424, \n"
"            stop: 0.505 #000000,\n"
"            stop: 0.827 #040404,\n"
"            stop: 0.966 #292929,\n"
"            stop: 0.983 #2e2e2e\n"
"        );\n"
"    }")
        self.psidial.setMinimum(1)
        self.psidial.setMaximum(90)
        self.psidial.setSingleStep(5)
        self.psidial.setProperty("value", 90)
        self.psidial.setNotchTarget(10.0)
        self.psidial.setNotchesVisible(True)
        self.psidial.setObjectName("psidial")
        self.gammalabel = QtWidgets.QLabel(self.frame_4)
        self.gammalabel.setGeometry(QtCore.QRect(150, 105, 121, 20))
        self.gammalabel.setObjectName("gammalabel")
        self.rollingfrequencylabel = QtWidgets.QLabel(self.frame_4)
        self.rollingfrequencylabel.setGeometry(QtCore.QRect(250, 10, 111, 61))
        self.rollingfrequencylabel.setObjectName("rollingfrequencylabel")
        self.psilabel = QtWidgets.QLabel(self.frame_4)
        self.psilabel.setGeometry(QtCore.QRect(40, 105, 91, 21))
        self.psilabel.setObjectName("psilabel")
        self.gammadial = QtWidgets.QDial(self.frame_4)
        self.gammadial.setGeometry(QtCore.QRect(130, 5, 91, 101))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.gammadial.setFont(font)
        self.gammadial.setStyleSheet("QDial {\n"
"    background-color: qconicalgradient(cx:0.5, cy:0.5, angle:90, stop:0 #1a5276, stop:0.3 #2980b9, stop:0.7 #3498db, stop:1 #1a5276);\n"
"    border: 2px solid #1a5276;\n"
"    padding: 5px;\n"
"}\n"
"\n"
"QDial::handle {\n"
"    background-color: qconicalgradient(cx:0.5, cy:0.5, angle:90, stop:0 #f39c12, stop:0.3 #f1c40f, stop:0.7 #f39c12, stop:1 #f1c40f);\n"
"    border: 2px solid #e67e22;\n"
"    width: 20px;\n"
"    height: 20px;\n"
"    border-radius: 10px;\n"
"    margin: -5px;\n"
"}\n"
"")
        self.gammadial.setMaximum(180)
        self.gammadial.setSingleStep(5)
        self.gammadial.setPageStep(10)
        self.gammadial.setProperty("value", 90)
        self.gammadial.setOrientation(QtCore.Qt.Horizontal)
        self.gammadial.setWrapping(False)
        self.gammadial.setNotchTarget(10.0)
        self.gammadial.setNotchesVisible(True)
        self.gammadial.setObjectName("gammadial")
        self.magneticfrequencydial = QtWidgets.QDoubleSpinBox(self.frame_4)
        self.magneticfrequencydial.setGeometry(QtCore.QRect(260, 70, 81, 41))
        self.magneticfrequencydial.setDecimals(2)
        self.magneticfrequencydial.setMaximum(250.0)
        self.magneticfrequencydial.setProperty("value", 10.0)
        self.magneticfrequencydial.setObjectName("magneticfrequencydial")
        self.dockWidget_2.setWidget(self.dockWidgetContents_4)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockWidget_2)
        self.actiondock = QtWidgets.QAction(MainWindow)
        self.actiondock.setMenuRole(QtWidgets.QAction.NoRole)
        self.actiondock.setObjectName("actiondock")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.frameslider.setFormat(_translate("MainWindow", "Frame %v"))
        self.choosevideobutton.setText(_translate("MainWindow", "Choose Video"))
        self.pausebutton.setText(_translate("MainWindow", "Pause"))
        self.savedatabutton.setText(_translate("MainWindow", "Save Data"))
        self.recordbutton.setText(_translate("MainWindow", "Record"))
        self.framelabel.setText(_translate("MainWindow", "Frame: "))
        self.leftbutton.setText(_translate("MainWindow", "..."))
        self.rightbutton.setText(_translate("MainWindow", "..."))
        self.exposurelabel.setText(_translate("MainWindow", "Exposure (us)"))
        self.objectivelabel.setText(_translate("MainWindow", "Objective (x)"))
        self.toggledisplayvisualscheckbox.setText(_translate("MainWindow", "Toggle Image Display Visuals"))
        self.exposurelabel_3.setText(_translate("MainWindow", ".mp4"))
        self.exposurelabel_2.setText(_translate("MainWindow", "Output File Name:"))
        self.memorylabel.setText(_translate("MainWindow", "Velocity Memory\n"
" (frames)"))
        self.startbutton.setText(_translate("MainWindow", "Start"))
        self.maskthreshlabel.setText(_translate("MainWindow", "Lower Thresh"))
        self.maskdilationlabel.setText(_translate("MainWindow", "Dilation"))
        self.croplengthlabel.setText(_translate("MainWindow", "Crop Length(px)"))
        self.maskblurlabel.setText(_translate("MainWindow", "Blur"))
        self.maskbutton.setText(_translate("MainWindow", "Mask"))
        self.robotmask_radio.setText(_translate("MainWindow", "Robot Mask"))
        self.cellmask_radio.setText(_translate("MainWindow", "Cell Mask"))
        self.maskinvert_checkBox.setText(_translate("MainWindow", "Invert Mask: True"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.label_10.setText(_translate("MainWindow", "TextLabel"))
        self.label_11.setText(_translate("MainWindow", "TextLabel"))
        self.label_12.setText(_translate("MainWindow", "TextLabel"))
        self.maskthreshlabel_2.setText(_translate("MainWindow", "Upper Thresh"))
        self.cleartrackingbutton.setText(_translate("MainWindow", "Clear"))
        self.robotsizelabel.setText(_translate("MainWindow", "Size:   "))
        self.robotvelocitylabel.setText(_translate("MainWindow", "Velocity: "))
        self.robotblurlabel.setText(_translate("MainWindow", "Blur:"))
        self.robotvelocityunitslabel.setText(_translate("MainWindow", "um/s"))
        self.robotsizeunitslabel.setText(_translate("MainWindow", "um  "))
        self.robotaccellabel.setText(_translate("MainWindow", "Accel:"))
        self.robotaccelunitslabel.setText(_translate("MainWindow", "um^2/s"))
        self.robotblurunitslabel.setText(_translate("MainWindow", "units"))
        self.resetdefaultbutton.setText(_translate("MainWindow", "Defaults"))
        self.croppedmasktoggle.setText(_translate("MainWindow", "Original"))
        self.croppedrecordbutton.setText(_translate("MainWindow", "Record"))
        self.swimradio.setText(_translate("MainWindow", "Swim"))
        self.applyacousticbutton.setText(_translate("MainWindow", "Apply"))
        self.rollradio.setText(_translate("MainWindow", "Roll"))
        self.joystickbutton.setText(_translate("MainWindow", "Joystick"))
        self.controlbutton.setText(_translate("MainWindow", "Control"))
        self.orientradio.setText(_translate("MainWindow", "Orient"))
        self.acousticfreqlabel.setText(_translate("MainWindow", "Acoustic \n"
"Frequency (Hz)"))
        self.autoacousticbutton.setText(_translate("MainWindow", "Auto"))
        self.gradient_status_checkbox.setText(_translate("MainWindow", "Gradient"))
        self.import_excel_actions.setText(_translate("MainWindow", "Import Excel Actions"))
        self.apply_actions.setText(_translate("MainWindow", "Apply Excel Actions"))
        self.equal_field_checkbox.setText(_translate("MainWindow", "Equal Field"))
        self.pushradio.setText(_translate("MainWindow", "Push"))
        self.selectport.setText(_translate("MainWindow", "Select Arduino Port:"))
        self.ricocheteffectlabel.setText(_translate("MainWindow", "Ricochet Effect:"))
        self.arrivalthreshlabel.setText(_translate("MainWindow", "Arrive Thresh (px):"))
        self.RRTtreesizelabel_2.setText(_translate("MainWindow", "RRT Tree Size (px):"))
        self.corriderwidthlabel.setText(_translate("MainWindow", "Corridor Width (um):"))
        self.approachdistancelabel.setText(_translate("MainWindow", "Approach Dist (px):"))
        self.approachdistancelabel_2.setText(_translate("MainWindow", "Spinning  (Hz):"))
        self.simulationbutton.setText(_translate("MainWindow", "Simulation On"))
        self.label_6.setText(_translate("MainWindow", "Manual (%)"))
        self.manualapplybutton.setText(_translate("MainWindow", "Apply"))
        self.label_7.setText(_translate("MainWindow", "Bx:"))
        self.label_8.setText(_translate("MainWindow", "By:"))
        self.label_9.setText(_translate("MainWindow", "Bz:"))
        self.manualalphalabel.setText(_translate("MainWindow", "Alpha:"))
        self.label_5.setText(_translate("MainWindow", "Hall Sensor"))
        self.label_4.setText(_translate("MainWindow", "mT"))
        self.label_3.setText(_translate("MainWindow", "mT"))
        self.bylabel.setText(_translate("MainWindow", "By: 0"))
        self.bxlabel.setText(_translate("MainWindow", "Bx: 0"))
        self.label_2.setText(_translate("MainWindow", "mT"))
        self.bzlabel.setText(_translate("MainWindow", "Bz: 0"))
        self.label_13.setText(_translate("MainWindow", "TextLabel"))
        self.make_inf_path.setText(_translate("MainWindow", "Make Infinity Path"))
        self.gammalabel.setText(_translate("MainWindow", "Gamma: 90"))
        self.rollingfrequencylabel.setText(_translate("MainWindow", "Magnetic Rotating \n"
"Frequency (Hz):"))
        self.psilabel.setText(_translate("MainWindow", "Psi: 90"))
        self.actiondock.setText(_translate("MainWindow", "dock"))
